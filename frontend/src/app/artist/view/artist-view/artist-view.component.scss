@import 'variables';

:host {
    flex: 1;
}

$view-padding: 4*$padding-standard;

.edit-toggle-container {
    position: fixed;
    top: 12%;
    left: 0;
    z-index: 100;
}

.edit-toggle {
    background-color: $primaryColor;
    border-top-right-radius: $radius;
    border-bottom-right-radius: $radius;
    margin-bottom: $padding-standard;
    box-shadow: $shadow-standard;
}


.image-bg {
    height: 100%;
    position: fixed;
    width: 100vw;
    max-height: 100vh;
    white-space: nowrap;
    background-color: $bg;
    opacity: 0.7;
}

.book-now-btn {
    display: flex;
    justify-content: flex-end;
    align-self: flex-end;
    gap: $padding-standard;
    &.joined {
        grid-column: span 2;
    }
}

.view-content {
    position: relative;
    min-height: 100vh;

    .spacer {
        height: 30vh;
    }

    .grid-container {
        &.one {
            row-gap: 0; 
            grid-template-columns: $avatarSize 1fr;
            padding-bottom: $padding-standard;
        }
        &.two {
            padding-bottom: 4*$padding-standard;

            .tiles-column {
                order: 1;
                display: flex;
                flex-direction: column;
                gap: $padding-standard;
            }
        }
        
        padding-left: $padding-standard;
        padding-right: $padding-standard;
        display: grid;
        column-gap: $padding-standard;
        row-gap: $padding-standard;
        grid-template-columns: 1fr;
        width: 100%;
    }
}

.menu-button {
    margin-right: $view-padding;
    display: flex;
    justify-content: flex-end;
}

@media only screen and (min-width: $desktop) {

    .edit-toggle-container {
        position: fixed;
        top: 30%;
    }

    .image-bg-item {
        max-height: 100vh;
    }

    .book-now-btn {
        &.joined {
            grid-column: unset;
        }
    }

    .view-content {
        .grid-container {
            max-width: $hugeScreen;
            margin: 0 auto;
            &.one {
                row-gap: 0; 
                grid-template-columns: $avatarSizeDesktop 2fr 1fr;
                padding-bottom: 4*$padding-standard;
            }
            grid-template-columns: 2fr 1fr;
            column-gap: 3*$padding-standard;
            row-gap: $padding-standard;

            &.two {
                padding-bottom: 4*$padding-standard;
    
                .tiles-column {
                    gap: 0;
                    .tile {
                        margin-bottom: $padding-standard;
                    }
                    &.right-on-desktop {
                        order: 2;
                    }
                }
            }
        }

    }
}

@media only screen and (min-width: $maxScreen) {
    .view-content {
        .grid-container {
            max-width: $maxScreen;
        }
    }
}